swagger: "2.0"
info:
  title: "PSP Signup API"
  version: "1.1.0"
  description: >
    The Vipps PSP Signup API allows PSPs to onboard and control their merchants.
  contact:
    name: Vipps AS
    email: integration@vipps.no
    url: https://vipps.no/
tags:
  - name: Merchant
    description: Merchants
host: api.vipps.no
basePath: /merchant-management/psp
schemes:
  - "https"
consumes:
  - application/json
produces:
  - application/json;charset=UTF-8
paths:
  /v1/merchants:
    parameters:
      - $ref: "#/parameters/auth"
      - $ref: "#/parameters/apimKey"
    get:
      operationId: getMerchants
      summary: Get all merchants
      tags:
        - Merchant
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GetMerchantsResponse"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "405":
          $ref: "#/responses/405"
        "500":
          $ref: "#/responses/500"
    post:
      operationId: addMerchant
      summary: Create a new merchant
      tags:
        - Merchant
      parameters:
        - $ref: "#/parameters/idempotency"
        - name: "merchant"
          in: "body"
          description: "merchant"
          required: true
          schema:
            $ref: "#/definitions/CreateMerchantRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/CreateMerchantResponse"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "405":
          $ref: "#/responses/405"
        "409":
          $ref: "#/responses/409"
        "415":
          $ref: "#/responses/415"
        "500":
          $ref: "#/responses/500"
  /v1/merchants/{merchantSerialNumber}:
    parameters:
      - $ref: "#/parameters/auth"
      - $ref: "#/parameters/apimKey"
      - $ref: "#/parameters/merchantSerialNumber"
    get:
      operationId: getMerchant
      summary: Get merchant by Id
      tags:
        - Merchant
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Merchant"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "405":
          $ref: "#/responses/405"
        "500":
          $ref: "#/responses/500"
    patch:
      operationId: patchMerchant
      summary: Update a merchant
      tags:
        - Merchant
      parameters:
        - name: "merchant"
          in: "body"
          description: "merchant"
          required: true
          schema:
            $ref: "#/definitions/UpdateMerchantRequest"
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "405":
          $ref: "#/responses/405"
        "415":
          $ref: "#/responses/415"
        "500":
          $ref: "#/responses/500"
responses:
  "400":
    description: Invalid request, check request parameters
    schema:
      $ref: "#/definitions/Error"
  "401":
    description: Unauthorized
  "403":
    description: Forbidden
    schema:
      $ref: "#/definitions/Error"
  "404":
    description: Item does not exist
    schema:
      $ref: "#/definitions/Error"
  "405":
    description: Request method not supported
    schema:
      $ref: "#/definitions/Error"
  "409":
    description: Idempotent conflict
    schema:
      $ref: "#/definitions/Error"
  "415":
    description: Unsupported media type
    schema:
      $ref: "#/definitions/Error"
  "500":
    description: Internal server error
    schema:
      $ref: "#/definitions/Error"
parameters:
  merchantSerialNumber:
    name: merchantSerialNumber
    type: string
    in: path
    required: true
    description: The Vipps merchant serial number
    minLength: 5
    maxLength: 6
    pattern: '^\d{5,6}$'
  auth:
    name: Authorization
    in: header
    required: true
    description: Bearer 'auth token'
    type: string
  apimKey:
    name: Ocp-Apim-Subscription-Key
    in: header
    description: Subscription key for the PSP Signup API
    required: true
    type: string
  idempotency:
    name: Idempotency-Key
    in: header
    description: Unique key for idempotent operation
    required: true
    type: string
definitions:
  Merchant:
    description: Details of a merchant
    required:
      - merchantSerialNumber
      - name
      - address
      - logo
      - status
      - organizationNumber
      - companyName
      - companyEmail
      - mccCode
    properties:
      organizationNumber:
        type: string
        minLength: 1
        maxLength: 50
        x-order: 1
        example: "123456789"
        description: Organization number of the merchant
      companyName:
        type: string
        x-order: 2
        example: "Vipps AS"
        description: "The legal name of the organization. This may be different from `name`, which is displayed in the Vipps app."
      companyEmail:
        type: string
        x-isisnullable: true
        x-order: 3
        example: "user@example.com"
        description: "The merchant's email address"
      merchantSerialNumber:
        type: string
        description: Vipps merchant serial number
        minLength: 5
        maxLength: 6
        pattern: '^\d{5,6}$'
        x-order: 4
        example: "123456"
      name:
        type: string
        description: "The merchant's name. This name will be displayed in the Vipps app. This may be different from the legal name in `companyName`."
        x-order: 5
        example: "Example AS"
      mccCode:
        type: string
        description: Four-digit number listed in ISO 18245 for retail financial services, used to classify a business by the types of goods or services it provides
        minLength: 4
        maxLength: 4
        pattern: '^\d{4}$'
        x-order: 6
        example: "5411"
      status:
        type: string
        description: Status of the merchant in Vipps
        enum:
          - ACTIVE
          - DEACTIVATED
          - PENDING
        default: PENDING
        x-order: 7
      logo:
        type: string
        format: byte
        description: Base64 encoded string of the logo of the merchant. The logo will be displayed in the Vipps app.
        x-isnullable: true
        x-order: 8
      email:
        type: string
        description: "Contact email for the merchant. Can be the same as `companyEmail`."
        format: email
        x-isnullable: true
        x-order: 9
        example: "user@example.com"
      website:
        type: string
        description: "The URL for the merchant's website"
        format: uri
        x-isnullable: true
        x-order: 10
        example: "https://example.com"
      createdAt:
        type: string
        description: Date-time when the merchant was created in Vipps
        format: date-time
        x-isnullable: true
        x-order: 11
        example: 2019-01-01T00:00:00Z
      updatedAt:
        type: string
        description: Date-time when the merchant was last updated in Vipps
        format: date-time
        x-isnullable: true
        x-order: 12
        example: 2019-01-01T00:00:00Z
      address:
        description: "The merchant's address"
        $ref: "#/definitions/Address"
        x-order: 13
  GetMerchantsResponse:
    type: object
    description: Response of successful getMerchants operation
    required:
      - merchants
    properties:
      merchants:
        type: array
        description: List of Merchants
        items:
          $ref: "#/definitions/Merchant"
  CreateMerchantRequest:
    description: Request for addMerchant operation
    properties:
      organizationNumber:
        type: string
        minLength: 1
        maxLength: 50
        x-order: 1
        example: "123456789"
        description: Organization number of the merchant
      name:
        type: string
        maxLength: 200
        pattern: "^[A-Za-z0-9 ]+$"
        description: The merchant's name. This name will be displayed in the Vipps app. This may be different from the legal name in `companyName`.
        example: "Example AS"
      mccCode:
        type: string
        description: Four-digit number listed in ISO 18245 for retail financial services, used to classify a business by the types of goods or services it provides
        minLength: 4
        maxLength: 4
        pattern: '^\d{4}$'
        example: "5411"
      logo:
        type: string
        description: Base64 encoded string of the logo of the merchant. The logo will be displayed in the Vipps app.
      email:
        type: string
        description: Contact email for the merchant. Can be same as companyEmail
        format: email
        pattern: '^[a-zA-Z0-9.!#$%&*+\/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$'
        maxLength: 255
        example: "user@example.com"
      website:
        type: string
        description: "The URL for the merchant's website"
        pattern: '^[(http(s)?):\/\/(www\.)?a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)*$'
        format: uri
        maxLength: 255
        example: "https://example.com"
      address:
        description: "The merchant's address"
        $ref: "#/definitions/Address"
      companyName:
        type: string
        maxLength: 255
        pattern: "^[A-Za-z0-9 ]+$"
        example: "Vipps AS"
        description: "The legal name of the organization. This may be different from `name`, which is displayed in the Vipps app."
      companyEmail:
        type: string
        format: email
        pattern: '^[a-zA-Z0-9.!#$%&*+\/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$'
        maxLength: 255
        example: "user@example.com"
        description: "The merchant's email address"
    required:
      - name
      - address
      - logo
      - organizationNumber
      - companyName
      - companyEmail
      - mccCode
  UpdateMerchantRequest:
    description: Request for patchMerchant operation. Atleast one of the properties is required
    properties:
      deactivate:
        type: boolean
        description: Set as true in order to deactivate a merchant. Already deactivated merchant cannot be activated or updated through the API
      name:
        type: string
        maxLength: 200
        pattern: "^[A-Za-z0-9 ]+$"
        description: "The merchant's name. This name will be displayed in the Vipps app. This may be different from the legal name in `companyName`."
        example: "Example AS"
      mccCode:
        type: string
        description: Four-digit number listed in ISO 18245 for retail financial services, used to classify a business by the types of goods or services it provides
        minLength: 4
        maxLength: 4
        pattern: '^\d{4}$'
        example: "5411"
      logo:
        type: string
        description: Base64 encoded string of the logo of the merchant. The logo will be displayed in the Vipps app.
      email:
        type: string
        description: Contact email for the merchant. Can be same as companyEmail
        format: email
        pattern: '^[a-zA-Z0-9.!#$%&*+\/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$'
        maxLength: 255
        example: "user@example.com"
      website:
        type: string
        description: "The URL for the merchant's website"
        format: uri
        pattern: '^[(http(s)?):\/\/(www\.)?a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)*$'
        maxLength: 255
        example: "https://example.com"
      address:
        description: "The merchant's address"
        $ref: "#/definitions/Address"
  CreateMerchantResponse:
    description: Response of successful addMerchant operation
    required:
      - merchantSerialNumber
    properties:
      merchantSerialNumber:
        type: string
        description: The Vipps saleunit's merchant serial number
        minLength: 5
        maxLength: 6
        pattern: '^\d{5,6}$'
  Address:
    type: object
    description: "The merchant's address"
    required:
      - addressLine1
      - city
      - country
      - postCode
    properties:
      addressLine1:
        type: string
        description: Address Line 1
        example: "Robert Levins gate 5"
        maxLength: 255
        pattern: "^[A-Za-z0-9 ]+$"
        x-order: 1
      addressLine2:
        type: string
        description: Address Line 2
        example: "Att: Rune Garborg"
        maxLength: 255
        pattern: "^[A-Za-z0-9 ]+$"
        x-isnullable: true
        x-order: 2
      city:
        type: string
        description: City
        example: "Oslo"
        maxLength: 255
        x-order: 3
      postCode:
        type: string
        description: Postcode
        pattern: '^\d{4}$'
        minLength: 4
        maxLength: 4
        example: "0154"
        x-order: 4
      country:
        type: string
        description: Two letter country code based on ISO 3166
        pattern: '^\w{2}$'
        minLength: 2
        maxLength: 2
        example: "NO"
        default: "NO"
        x-order: 5
  Error:
    type: object
    description: Problem details of HTTP APIs based on RFC 7807
    required:
      - status
      - title
      - detail
      - instance
    properties:
      type:
        type: "string"
        description: |
          "A URI reference that identifies the problem type"
        example: "https://example.net/validation-error"
        x-order: 1
      title:
        type: "string"
        description: |
          "A short, human-readable summary of the problem type"
        example: "Postcode validation error"
        x-order: 2
      status:
        type: "number"
        description: |
          "The HTTP status code generated by the origin server for this occurrence of the problem"
        example: 400
        x-order: 3
      detail:
        type: "string"
        description: |
          "A human-readable explanation specific to this occurrence of the problem.
          The detail member, if present, ought to focus on helping the client correct the problem,
          rather than giving debugging information."
        example: "Postcode must be four digits"
        x-order: 4
      instance:
        type: "string"
        description: |
          "A URI reference that identifies the specific occurrence of the problem"
        example: "https://example.net/validation-error/postcode"
        x-order: 5
